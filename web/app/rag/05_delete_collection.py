#!/usr/bin/env python3
"""
Script de suppression de collection Weaviate
Supprime une collection sp√©cifi√©e en param√®tre avec confirmation
"""

import os
import sys
import weaviate
from dotenv import load_dotenv
import warnings

# Suppression des warnings non critiques
warnings.filterwarnings("ignore", category=ResourceWarning)
warnings.filterwarnings("ignore", message="Con004")
os.environ["WEAVIATE_DISABLE_WARNINGS"] = "1"

load_dotenv()

# Configuration Weaviate via variables d'environnement
HOST = os.getenv("WEAVIATE_HOST", "wikiragweaviate")
HTTP_PORT = int(os.getenv("WEAVIATE_HTTP_PORT", "8080"))
GRPC_PORT = int(os.getenv("WEAVIATE_GRPC_PORT", "50051"))

def delete_collection(collection_name: str):
    """Supprime une collection Weaviate avec confirmation"""
    
    # Connexion Weaviate v4
    try:
        client_db = weaviate.connect_to_custom(
            http_host=HOST, http_port=HTTP_PORT, http_secure=False,
            grpc_host=HOST, grpc_port=GRPC_PORT, grpc_secure=False,
        )
        print(f"‚úÖ Connexion √† Weaviate r√©ussie ({HOST}:{HTTP_PORT})")
    except Exception as e:
        print(f"‚ùå Erreur de connexion √† Weaviate : {e}")
        sys.exit(1)
    
    # V√©rification de l'existence de la collection
    if not client_db.collections.exists(collection_name):
        print(f"‚ùå La collection '{collection_name}' n'existe pas.")
        print("üìã Collections disponibles :")
        try:
            collections = client_db.collections.list_all()
            if collections:
                for collection in collections:
                    print(f"   - {collection}")
            else:
                print("   (Aucune collection trouv√©e)")
        except Exception as e:
            print(f"   (Erreur lors de la r√©cup√©ration : {e})")
        client_db.close()
        sys.exit(1)
    
    # Affichage des informations de la collection
    try:
        collection = client_db.collections.get(collection_name)
        count = collection.aggregate.over_all(total_count=True).total_count
        print(f"üìä Collection '{collection_name}' trouv√©e")
        print(f"üìà Nombre d'objets : {count}")
    except Exception as e:
        print(f"‚ö†Ô∏è  Impossible de r√©cup√©rer les statistiques : {e}")
        count = "inconnu"
    
    # Confirmation de suppression
    print(f"\n‚ö†Ô∏è  ATTENTION : Vous √™tes sur le point de supprimer la collection '{collection_name}'")
    print(f"üìä Cette collection contient {count} objets")
    print("üóëÔ∏è  Cette action est IRR√âVERSIBLE !")
    
    while True:
        confirmation = input(f"\n√ätes-vous s√ªr de vouloir supprimer '{collection_name}' ? (oui/non) : ").strip().lower()
        
        if confirmation in ['oui', 'o', 'yes', 'y']:
            break
        elif confirmation in ['non', 'n', 'no']:
            print("‚úÖ Suppression annul√©e.")
            client_db.close()
            sys.exit(0)
        else:
            print("‚ùå R√©ponse invalide. Veuillez r√©pondre 'oui' ou 'non'.")
    
    # Suppression de la collection
    try:
        print(f"üóëÔ∏è  Suppression de la collection '{collection_name}'...")
        client_db.collections.delete(collection_name)
        print(f"‚úÖ Collection '{collection_name}' supprim√©e avec succ√®s !")
        
        # V√©rification de la suppression
        if not client_db.collections.exists(collection_name):
            print(f"‚úÖ V√©rification : La collection '{collection_name}' n'existe plus.")
        else:
            print(f"‚ö†Ô∏è  Attention : La collection '{collection_name}' existe encore.")
            
    except Exception as e:
        print(f"‚ùå Erreur lors de la suppression : {e}")
        sys.exit(1)
    finally:
        client_db.close()
        print("üîí Connexion ferm√©e.")

def main():
    """Fonction principale"""
    
    if len(sys.argv) < 2:
        print("""
üóëÔ∏è  Suppression de collection Weaviate
=====================================

Utilisation : python 05_delete_collection.py <nom_collection>

Exemples :
  python 05_delete_collection.py CollectionName1
  python 05_delete_collection.py CollectionName2
  python 05_delete_collection.py CollectionName3

‚ö†Ô∏è  ATTENTION : Cette action est IRR√âVERSIBLE !
""")
        sys.exit(1)
    
    collection_name = sys.argv[1]
    
    # Validation du nom de collection
    if not collection_name or not collection_name.strip():
        print("‚ùå Nom de collection invalide.")
        sys.exit(1)
    
    collection_name = collection_name.strip()
    
    print(f"üéØ Suppression de la collection : '{collection_name}'")
    print(f"üîó Connexion √† Weaviate : {HOST}:{HTTP_PORT}")
    print("=" * 50)
    
    delete_collection(collection_name)

if __name__ == "__main__":
    main()
